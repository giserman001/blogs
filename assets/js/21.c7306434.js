(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{233:function(e,t,n){"use strict";n.r(t);var a=n(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h3",{attrs:{id:"_1-服务端数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-服务端数据"}},[e._v("#")]),e._v(" 1.服务端数据")]),e._v(" "),n("p",[e._v("Vue权限菜单需要根据后端返回的数据来实现")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("[\n    {pid:-1,name:'购物车',id:1,auth:'cart'},\n    {pid:1,name:'购物车列表',id:4,auth:'cart-list'},\n    {pid:4,name:'彩票',id:5,auth:'lottery'},\n    {pid:4,name:'商品',id:6,auth:'product'},\n    {pid:-1,name:'商店',id:2,auth:'shop'},\n    {pid:-1,name:'个人中心',id:3,auth:'store'},\n]\n")])])]),n("p",[e._v("通过express返回权限列表")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const express = require('express');\nconst app = express();\napp.all('*', (req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  // Access-Control-Allow-Headers ,可根据浏览器的F12查看,把对应的粘贴在这里就行\n  res.header('Access-Control-Allow-Headers', 'Content-Type');\n  res.header('Access-Control-Allow-Methods', '*');\n  res.header('Content-Type', 'application/json;charset=utf-8');\n  next();});\napp.get('/roleAuth', (req, res) => {\n  res.json({\n    menuList: [\n        {pid:-1,name:'购物车',id:1,auth:'cart'},\n        {pid:1,name:'购物车列表',id:4,auth:'cart-list'},\n        {pid:4,name:'彩票',id:5,auth:'lottery'},\n        {pid:4,name:'商品',id:6,auth:'product'},\n        {pid:-1,name:'商店',id:2,auth:'shop'},\n        {pid:-1,name:'个人中心',id:3,auth:'store'},\n    ]\n  });});\napp.listen(3000);\n")])])]),n("h3",{attrs:{id:"_2-静态菜单"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-静态菜单"}},[e._v("#")]),e._v(" 2.静态菜单")]),e._v(" "),n("p",[e._v("使用element-ui构建静态菜单")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nVue.use(ElementUI);\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<el-menu default-active="2" class="el-menu-vertical-demo">\n    <el-submenu index="1">\n        <template slot="title">导航一</template>\n        <el-submenu index="1-1">\n            <template slot="title">选项1-1</template>\n            <el-menu-item index="1-1-1">选项1-1-1</el-menu-item>\n            <el-menu-item index="1-1-2">选项1-1-2</el-menu-item>\n        </el-submenu>\n        <el-menu-item index="1-2">选项1-2</el-menu-item>\n    </el-submenu>\n    <el-menu-item index="2">\n        导航二\n    </el-menu-item>\n    <el-menu-item index="3">\n        导航三\n    </el-menu-item>\n    <el-menu-item index="4">\n        导航四\n    </el-menu-item></el-menu>\n')])])]),n("p",[e._v("路由配置")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import Vue from 'vue'import Router from 'vue-router'import Home from './views/Home.vue'\n\nVue.use(Router)export const authRoutes = [ // 权限路由\n  {\n    path: '/cart',\n    name: 'cart',\n    component: () => import('@/views/Cart'),\n    children: [\n      {\n        path: 'cart-list',\n        name: 'cart-list',\n        component: () => import('@/views/CartList'),\n        children: [\n          {\n            path: 'lottery',\n            name: 'lottery',\n            component: () => import('@/views/Lottery'),\n          },\n          {\n            path: 'product',\n            name: 'product',\n            component: () => import('@/views/Product'),\n          },\n        ],\n      },\n    ],\n  },];export default new Router({ // 默认导出 首页和404页面\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home\n    },\n    {\n      path:'*',\n      component:{\n        render:h=>h('h1',{},'Not Found')\n      }\n    }\n  ]})\n")])])]),n("h3",{attrs:{id:"_3-获取权限"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-获取权限"}},[e._v("#")]),e._v(" 3.获取权限")]),e._v(" "),n("p",[e._v("根据后端返回的数据，格式化树结构，并提取用户权限")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 默认设置没有获取过权限export default new Vuex.Store({\n  state: {\n    hasPermission:false\n  },\n  mutations: {\n    setPermission(state){\n      state.hasPermission = true\n    }\n  },})\n")])])]),n("p",[e._v("在路由跳转前看下是否获取过权限，如果没有获取过，就获取权限存入vuex中")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("router.beforeEach(async (to,from,next)=>{\n  if(!store.state.hasPermission){\n    // 获取最新路由列表\n    let newRoutes = await store.dispatch('getRouteList'); \n    router.addRoutes(newRoutes); // 增加新路由\n    next({...to,replace:true})\n  }else{\n    next(); // 获取过就不需要再次获取了\n  }})\n")])])]),n("h3",{attrs:{id:"_4-获取相关需要数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-获取相关需要数据"}},[e._v("#")]),e._v(" 4.获取相关需要数据")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const getMenListAndAuth = (menuList)=>{\n  let menu = [];\n  let sourceMap = {};\n  let auth = [];\n  menuList.forEach(m => {\n    m.children = []; // 增加孩子列表\n    sourceMap[m.id] = m;\n    auth.push(m.auth)\n    if(m.pid === -1){\n      menu.push(m); // 根节点\n    }else{\n      sourceMap[m.pid] && sourceMap[m.pid].children.push(m)\n    }\n  });\n  return {menu,auth} // 获取菜单数据和权限数据\n}\nasync getRouteList({dispatch,commit}){\n    let auths = await axios.get('http://localhost:3000/roleAuth');\n    let menuList = auths.data.menuList;\n    let {menu,auth} = getMenListAndAuth(menuList);\n}\n")])])]),n("h3",{attrs:{id:"_5-找到需要添加的路由"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-找到需要添加的路由"}},[e._v("#")]),e._v(" 5.找到需要添加的路由")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('import {authRoutes} from \'./router\'const getRoutes = auth => {\n  const filter = (authRoutes)=>{\n    return authRoutes.filter(route=>{\n      // 包含权限\n      if(auth.includes(route.name)){\n        if(route.children){\n          route.children = filter(route.children);\n        }\n        return true;\n      }\n    })\n  }\n  return filter(authRoutes);};\n\n// 获取需要添加的路由列表\nasync getRouteList({ dispatch, commit }) {\n    let auths = await axios.get("http://localhost:3000/roleAuth");\n    let menuList = auths.data.menuList;\n    let { menu, auth } = getMenListAndAuth(menuList);\n    commit("setMenu", menu); // 将菜单数据保存起来\n    commit("setPermission"); // 权限获取完毕\n    // 通过auth查找需要添加的路由\n    return getRoutes(auth);\n}\n')])])]),n("h3",{attrs:{id:"_6-递归渲染菜单"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-递归渲染菜单"}},[e._v("#")]),e._v(" 6.递归渲染菜单")]),e._v(" "),n("p",[e._v("渲染Menu组件提取公共部分")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<template>\n <div>\n  <el-menu>\n   <template v-for="menu in $store.state.menu">\n    <el-submenu v-if="menu.children.length" :key="menu.auth" :index="menu.auth">\n     <template slot="title">{{menu.name}}</template>\n     \x3c!-- 此处需要不停的递归 el-submenu  --\x3e\n    </el-submenu>\n    <el-menu-item v-else :key="menu.auth" :index="menu.auth">{{menu.name}}</el-menu-item>\n   </template>\n  </el-menu>\n </div>\n</template>\n')])])]),n("p",[e._v("编写递归组件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<template>\n    <el-submenu :index="menu.auth">\n         <template slot="title">{{menu.name}}</template>\n         <template v-for="(child,index) in menu.children">  \n            <el-menu-item v-if="!child.children.length" :key="index"> \n               <router-link :to="{name:child.auth}"> {{child.name}}</router-link>\n            </el-menu-item>\n            \x3c!-- 如果有儿子继续递归组件 --\x3e\n            <ResubMenu :menu="child" v-else :key="index"></ResubMenu>\n         </template>\n    </el-submenu>\n</template>\n<script>\nexport default {\n    name:\'ResubMenu\',\n    props:{\n        menu:{}\n    }}\n<\/script>\n')])])]),n("h3",{attrs:{id:"_7-权限按钮控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-权限按钮控制"}},[e._v("#")]),e._v(" 7.权限按钮控制")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("state: {\n    hasPermission: false,\n    menu: [], // 菜单权限\n    btnPermission:{ // 按钮权限\n        edit:false,\n        add:true\n    }},\n")])])]),n("p",[e._v("查看当前按钮是否有权限")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("<el-button v-has=\"'edit'\">编辑</el-button>\n<el-button v-has=\"'add'\">添加</el-button>\n")])])]),n("p",[e._v("自定义指令的使用")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("directives: {\n  has: {\n   inserted(el, bindings, vnode) {\n     let value = bindings.value;\n     // 在vuex中查看是否有按钮权限\n     let flag = vnode.context.$store.state.btnPermission[value];\n     // 如果没有全选则将按钮删除即可\n     !flag && el.parentNode.removeChild(el);\n   }\n  }\n }\n")])])]),e._v(" "),n("comment-comment")],1)}),[],!1,null,null,null);t.default=s.exports}}]);