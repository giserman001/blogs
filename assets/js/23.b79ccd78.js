(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{241:function(e,n,t){"use strict";t.r(n);var l=t(0),s=Object(l.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("ul",[t("li",[t("p",[e._v("vue预渲染解决首页白屏和SEO (npm i prerender-spa-plugin)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install prerender-spa-plugin\n")])])]),t("p",[e._v("缺陷数据不够动态，可以使用ssr服务端渲染")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const PrerenderSPAPlugin = require('prerender-spa-plugin');\nconst path = require('path');\nmodule.exports = {\n    configureWebpack: {\n        plugins: [\n            new PrerenderSPAPlugin({\n                staticDir: path.join(__dirname, 'dist'),\n                routes: [ '/', '/about',],\n            })\n        ]\n    }\n  }\n")])])])]),e._v(" "),t("li",[t("p",[e._v("骨架屏加载 （npm i vue-skeleton-webpack-plugin）单页骨架屏   多页骨架屏（带路由）")]),e._v(" "),t("p",[e._v("配置webpack插件 vue-skeleton-webpack-plugin\n单页骨架屏幕")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import Vue from 'vue';\nimport Skeleton from './Skeleton.vue';\nexport default new Vue({\n    components: {\n        Skeleton:Skeleton\n    },\n    template: `\n        <Skeleton></Skeleton>\n    `});// 骨架屏\nplugins: [\n    new SkeletonWebpackPlugin({\n        webpackConfig: {\n            entry: {\n                app: resolve('./src/entry-skeleton.js')\n            }\n        }\n    })]\n")])])]),t("p",[e._v("带路由（多页）的骨架屏，编写skeleton.js文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import Vue from \'vue\';\nimport Skeleton1 from \'./Skeleton1\';\nimport Skeleton2 from \'./Skeleton2\';\nexport default new Vue({\n    components: {\n        Skeleton1,\n        Skeleton2\n    },\n    template: `\n        <div>\n            <skeleton1 id="skeleton1" style="display:none"/>\n            <skeleton2 id="skeleton2" style="display:none"/>\n        </div>\n    `});\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("new SkeletonWebpackPlugin({\n    webpackConfig: {\n        entry: {\n            app: path.join(__dirname, './src/skeleton.js'),\n        },\n    },\n    router: {\n        mode: 'history',\n        routes: [\n            {\n                path: '/',\n                skeletonId: 'skeleton1'\n            },\n            {\n                path: '/about',\n                skeletonId: 'skeleton2'\n            },\n        ]\n    },\n    minimize: true,\n    quiet: true,\n})\n")])])]),t("blockquote",[t("p",[e._v("优化白屏效果")])])]),e._v(" "),t("li",[t("p",[e._v("服务端渲染（ssr）nuxt.js")])]),e._v(" "),t("li",[t("p",[e._v("webpack优化")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("使用cdn 配合 externals配置")])]),e._v(" "),t("li",[t("p",[e._v("使用多线程打包happypack")])]),e._v(" "),t("li",[t("p",[e._v("提取公共模块splitsChunks")])]),e._v(" "),t("li",[t("p",[e._v("sourceMap配置")])])]),e._v(" "),t("blockquote",[t("p",[e._v("配合使用webpack-bundle-analyzer分析打包后文件大小")])])]),e._v(" "),t("li",[t("p",[e._v("data属性之定义响应式数据")])]),e._v(" "),t("li",[t("p",[e._v("spa页面使用keep-alive缓存组件")])]),e._v(" "),t("li",[t("p",[e._v("拆分组件 组件渲染是具体到组件的，如果组件拆分够细，那么数据变动，页面渲染也就具体到某一个组件")])]),e._v(" "),t("li",[t("p",[e._v("v-if 具有阻断功能  尽量使用v-if 简单的显示隐藏就使用v-show")])]),e._v(" "),t("li",[t("p",[e._v("key保持唯一性  尽量不要使用 索引做")])]),e._v(" "),t("li",[t("p",[e._v("海量数据展示时，不需要响应，那么就使用Object.freeze去冻结，不去添加响应式 Object.defineProperty")])]),e._v(" "),t("li",[t("p",[e._v("路由懒加载和异步加载")])]),e._v(" "),t("li",[t("p",[e._v("尽量使用runtime运行时   （即.vue文件形式（webpack打包时进行编译）   而不是在vue实列里面写template模板(代码运行时进行编译，此时消耗性能)）")])]),e._v(" "),t("li",[t("p",[e._v(".数据持久化")]),e._v(" "),t("ol",[t("li",[e._v("页面刷新重新请求接口")]),e._v(" "),t("li",[e._v("存入本地localstroage sessionstroage")])]),e._v(" "),t("blockquote",[t("p",[e._v("（使用插件：npm i vue-persist）")])])])]),e._v(" "),t("comment-comment")],1)}),[],!1,null,null,null);n.default=s.exports}}]);